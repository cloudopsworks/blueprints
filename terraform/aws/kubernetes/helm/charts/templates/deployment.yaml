{{- if not .Values.cronjob.enabled }}
{{- if not .Values.job.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  {{- if .Values.service.name }}
  name: {{ .Values.service.name }}
  {{- else }}
  name: {{ template "fullname" . }}
  {{- end }}
  labels:
    draft: {{ default "draft-app" .Values.draft }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
  {{- with .Values.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
spec:
  {{- with .Values.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
  {{- if not .Values.hpa.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  template:
    metadata:
      labels:
        draft: {{ default "draft-app" .Values.draft }}
        app: {{ template "fullname" . }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount.create }}
      {{- if .Values.serviceAccount.name }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- else }}
      serviceAccountName: {{ template "fullname" . }}
      {{- end }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      {{- with .Values.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- with .Values.env }}
        env:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- if or .Values.envFrom .Values.injectEnvFrom }}
        envFrom:
        {{- with .Values.envFrom }}
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.injectEnvFrom }}
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- end }}
        ports:
        - containerPort: {{ .Values.service.internalPort }}
        livenessProbe:
          {{- if eq .Values.probe.type "http" }}
          httpGet:
            scheme: {{ .Values.probe.scheme }}
            path: {{ .Values.probe.path }}
            {{- if .Values.probe.port }}
            port: {{ .Values.probe.port }}
            {{- else }}
            port: {{ .Values.service.internalPort }}
            {{- end }}
          {{- else if eq .Values.probe.type "tcp" }}
          tcpSocket:
            {{- if .Values.probe.port }}
            port: {{ .Values.probe.port }}
            {{- else }}
            port: {{ .Values.service.internalPort }}
            {{- end }}
          {{- else if eq .Values.probe.type "command" }}
          exec:
            command:
              {{- toYaml .Values.probe.command | nindent 14 }}
          {{- end }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          successThreshold: {{ .Values.livenessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
        readinessProbe:
          {{- if eq .Values.probe.type "http" }}
          httpGet:
            scheme: {{ .Values.probe.scheme }}
            path: {{ .Values.probe.path }}
            {{- if .Values.probe.port }}
            port: {{ .Values.probe.port }}
            {{- else }}
            port: {{ .Values.service.internalPort }}
            {{- end }}
          {{- else if eq .Values.probe.type "tcp" }}
          tcpSocket:
            {{- if .Values.probe.port }}
            port: {{ .Values.probe.port }}
            {{- else }}
            port: {{ .Values.service.internalPort }}
            {{- end }}
          {{- else if eq .Values.probe.type "command" }}
          exec:
            command:
            {{- toYaml .Values.probe.command | nindent 14 }}
          {{- end }}
          periodSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          successThreshold: {{ .Values.readinessProbe.successThreshold }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
        {{- if .Values.startupProbe.enabled }}
        startupProbe:
          {{- if eq .Values.probe.type "http" }}
          httpGet:
            scheme: {{ .Values.probe.scheme }}
            path: {{ .Values.probe.path }}
            {{- if .Values.probe.port }}
            port: {{ .Values.probe.port }}
            {{- else }}
            port: {{ .Values.service.internalPort }}
            {{- end }}
          {{- else if eq .Values.probe.type "tcp" }}
          tcpSocket:
            {{- if .Values.probe.port }}
            port: {{ .Values.probe.port }}
            {{- else }}
            port: {{ .Values.service.internalPort }}
            {{- end }}
          {{- else if eq .Values.probe.type "command" }}
          exec:
            command:
            {{- toYaml .Values.probe.command | nindent 14 }}
          {{- end }}
          initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds }}
          failureThreshold: {{ .Values.startupProbe.failureThreshold }}
          periodSeconds: {{ .Values.startupProbe.periodSeconds }}
        {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        volumeMounts:
          {{- if .Values.additionalVolumeMounts }}
            {{- toYaml .Values.additionalVolumeMounts | nindent 10 }}
          {{- end }}
          {{- if .Values.injectedVolumeMounts }}
            {{- toYaml .Values.injectedVolumeMounts | nindent 10 }}
          {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        {{- if .Values.additionalVolumes }}
          {{- toYaml .Values.additionalVolumes | nindent 8 }}
        {{- end }}
        {{- if .Values.injectedVolumes }}
          {{- toYaml .Values.injectedVolumes | nindent 8 }}
        {{- end }}
{{- end }}
{{- end }}