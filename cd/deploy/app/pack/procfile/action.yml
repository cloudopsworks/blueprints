##
# (c) 2021-2025
#     Cloud Ops Works LLC - https://cloudops.works/
#     Find us on:
#       GitHub: https://github.com/cloudopsworks
#       WebSite: https://cloudops.works
#     Distributed Under Apache v2.0 License
#
name: Procfile creation for ElasticBeanstalk
author: cloudopsworks
description: Create Procfile for ElasticBeanstalk
inputs:
  temp_dir:
    description: 'The path to the blueprint'
    required: true
  java_stack:
    description: 'The Java stack'
    required: true
  node_stack:
    description: 'The Node stack'
    required: true
  python_stack:
    description: 'The Python stack'
    required: true
  dotnet_stack:
    description: 'The .NET stack'
    required: true
  go_stack:
    description: 'The Go stack'
    required: true
  node_apm:
    description: 'The Node APM parameters'
    required: false
    default: ''
  java_apm:
    description: 'The Java APM parameters'
    required: false
    default: ''
  python_apm:
    description: 'The Python APM parameters'
    required: false
    default: ''
  dotnet_apm:
    description: 'The .NET APM parameters'
    required: false
    default: ''
  go_apm:
    description: 'The Go APM parameters'
    required: false
    default: ''
  release_name:
    description: 'Pass from the previous step the release name'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Default Procfile for NodeJS
      if: ${{ inputs.node_stack == 'true' }}
      working-directory: ${{ inputs.temp_dir }}
      shell: bash
      run: |
        if [ ! -f Procfile ] ; then
          echo 'web: ${{ inputs.node_apm }} npm run start' > Procfile
          echo '::warning::Procfile created with default content'
        else
          echo '::notice::Procfile already exists, will use provided'
        fi

    - name: Default Procfile for Java
      if: ${{ inputs.java_stack == 'true' }}
      working-directory: ${{ inputs.temp_dir }}
      shell: bash
      run: |
        if [ ! -f Procfile ] ; then
          echo 'web: java $JAVA_OPTS ${{ inputs.java_apm }} -jar app.jar' > Procfile
          echo '::warning::Procfile created with default content'
        else
          echo '::notice::Procfile already exists, will use provided.'
        fi

    - name: Default Procfile for Python
      if: ${{ inputs.python_stack == 'true' }}
      working-directory: ${{ inputs.temp_dir }}
      shell: bash
      run: |
        if [ ! -f Procfile ] ; then
          echo 'web: ${{ inputs.python_apm }} python3 main.py' > Procfile
          echo '::warning::Procfile created with default content'
        else
          echo '::notice::Procfile already exists, will use provided.'
        fi

    - name: Default Procfile for .Net
      if: ${{ inputs.dotnet_stack == 'true' }}
      working-directory: ${{ inputs.temp_dir }}
      shell: bash
      run: |
        if [ ! -f Procfile ] ; then
          echo 'web: dotnet ${{ inputs.release_name }}.dll' > Procfile
          echo '::warning::Procfile created with default content'
        else
          echo '::notice::Procfile already exists, will use provided.'
        fi

    - name: Default Procfile for Go
      if: ${{ inputs.go_stack == 'true' }}
      working-directory: ${{ inputs.temp_dir }}
      shell: bash
      run: |
        if [ ! -f Procfile ] ; then
          echo 'web: bin/${{ inputs.release_name }}' > Procfile
          echo '::warning::Procfile created with default content'
        else
          echo '::notice::Procfile already exists, will use provided.'
        fi