##
# (c) 2021-2025
#     Cloud Ops Works LLC - https://cloudops.works/
#     Find us on:
#       GitHub: https://github.com/cloudopsworks
#       WebSite: https://cloudops.works
#     Distributed Under Apache v2.0 License
#
name: Stack Configuration retrieval
author: cloudopsworks
description: Retrieve the stack configuration
inputs:
  blueprint_path:
    description: 'The path to the blueprint'
    required: false
    default: 'bp'
  cloud:
    description: 'The target cloud'
    required: true
  cloud_type:
    description: 'The target cloud type'
    required: true
  environment:
    description: 'The environment'
    required: true
outputs:
  java_stack:
    description: 'The Java stack'
    value: ${{ steps.java_stack_eb.outputs.result != '' && steps.java_stack_eb.outputs.result || steps.java_stack_lambda.outputs.result }}
  node_stack:
    description: 'The Node stack'
    value: ${{ steps.node_stack_eb.outputs.result != '' && steps.node_stack_eb.outputs.result || steps.node_stack_lambda.outputs.result }}
  python_stack:
    description: 'The Python stack'
    value: ${{ steps.python_stack_eb.outputs.result != '' && steps.python_stack_eb.outputs.result || steps.python_stack_lambda.outputs.result }}

runs:
  using: 'composite'
  steps:
    # Get Stacks for Java, Node, and Python if beanstalk is in cloud_type
    - name: Get Java  Stack from inputs-${{ inputs.environment }}.yaml
      id: java_stack_eb
      if: ${{ inputs.cloud_type == 'beanstalk' }}
      working-directory: ${{ inputs.blueprint_path }}/terraform/${{ inputs.cloud }}/${{ inputs.cloud_type }}
      shell: bash
      run: |
        VAL=$(yq eval '.beanstalk.solution_stack | test("(?i:.*java.*)")' inputs.yaml)
        echo "result=$VAL" >> $GITHUB_OUTPUT

    - name: Get Node Stack from inputs-${{ inputs.environment }}.yaml
      id: node_stack_eb
      if: ${{ inputs.cloud_type == 'beanstalk' }}
      working-directory: ${{ inputs.blueprint_path }}/terraform/${{ inputs.cloud }}/${{ inputs.cloud_type }}
      shell: bash
      run: |
        VAL=$(yq eval '.beanstalk.solution_stack | test("(?i:.*node.*)")' inputs.yaml)
        echo "result=$VAL" >> $GITHUB_OUTPUT

    - name: Get Python Stack from inputs-${{ inputs.environment }}.yaml
      id: python_stack_eb
      if: ${{ inputs.cloud_type == 'beanstalk' }}
      working-directory: ${{ inputs.blueprint_path }}/terraform/${{ inputs.cloud }}/${{ inputs.cloud_type }}
      shell: bash
      run: |
        VAL=$(yq eval '.beanstalk.solution_stack | test("(?i:.*python.*)")' inputs.yaml)
        echo "result=$VAL" >> $GITHUB_OUTPUT

    # Get Stacks for Java, Node, and Python if lambda is in cloud_type
    - name: Get Java  Stack from inputs-${{ inputs.environment }}.yaml
      id: java_stack_lambda
      if: ${{ inputs.cloud_type == 'lambda' }}
      working-directory: ${{ inputs.blueprint_path }}/terraform/${{ inputs.cloud }}/${{ inputs.cloud_type }}
      shell: bash
      run: |
        VAL=$(yq eval '.lambda.runtime | test("(?i:.*java.*)")' inputs.yaml)
        echo "result=$VAL" >> $GITHUB_OUTPUT

    - name: Get Node Stack from inputs-${{ inputs.environment }}.yaml
      id: node_stack_lambda
      if: ${{ inputs.cloud_type == 'lambda' }}
      working-directory: ${{ inputs.blueprint_path }}/terraform/${{ inputs.cloud }}/${{ inputs.cloud_type }}
      shell: bash
      run: |
        VAL=$(yq eval '.lambda.runtime | test("(?i:.*node.*)")' inputs.yaml)
        echo "result=$VAL" >> $GITHUB_OUTPUT

    - name: Get Python Stack from inputs-${{ inputs.environment }}.yaml
      id: python_stack_lambda
      if: ${{ inputs.cloud_type == 'lambda' }}
      working-directory: ${{ inputs.blueprint_path }}/terraform/${{ inputs.cloud }}/${{ inputs.cloud_type }}
      shell: bash
      run: |
        VAL=$(yq eval '.lambda.runtime | test("(?i:.*python.*)")' inputs.yaml)
        echo "result=$VAL" >> $GITHUB_OUTPUT