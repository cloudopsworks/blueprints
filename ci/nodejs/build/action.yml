##
# (c) 2024 - Cloud Ops Works LLC - https://cloudops.works/
#            On GitHub: https://github.com/cloudopsworks
#            Distributed Under Apache v2.0 License
#
name: Build NodeJS Sources
author: cloudopsworks
description: Build NodeJS sources and save artifacts
inputs:
  source_path:
    description: 'The path to the source code'
    required: false
    default: 'source'
  blueprint_path:
    description: 'The path to the blueprint'
    required: false
    default: 'bp'
  artifacts_name:
    description: 'The name of the artifacts to save'
    required: false
    default: 'build_artifacts'
  sources_artifacts_name:
    description: 'The name of the sources to save'
    required: false
    default: 'source_artifacts'
  bot_user:
    description: 'The bot user to use for the build'
    required: true
  token:
    description: 'The github token to use for the build'
    required: true
outputs:
  node_version:
    description: 'The NodeJS version to use for the build'
    value: ${{ steps.node_version.outputs.result }}
  node_dist:
    description: 'The NodeJS distribution to use for the build'
    value: ${{ steps.node_dist.outputs.result }}
  node_image_variant:
    description: 'The NodeJS image variant to use for the build'
    value: ${{ steps.node_image_variant.outputs.result }}
  semver:
    description: 'The semver version'
    value: ${{ steps.semver.outputs.result }}
  package_name:
    description: 'The package name'
    value: ${{ steps.package_name.outputs.result }}

runs:
  using: 'composite'
  steps:
    # Get pipeline conf node version
    - name: Get pipeline node version
      id: node_version
      uses: mikefarah/yq@master
      with:
        cmd: yq eval '.node.version // "20"' ./${{ inputs.source_path }}/.github/vars/inputs-global.yaml

    # Get pipeline conf node dist
    - name: Get pipeline node dist
      id: node_dist
      uses: mikefarah/yq@master
      with:
        cmd: yq eval '.node.dist // "adopt"' ./${{ inputs.source_path }}/.github/vars/inputs-global.yaml

    # Get pipeline conf java image variant defaults to alpine
    - name: Get pipeline NodeJS image variant
      id: node_image_variant
      uses: mikefarah/yq@master
      with:
        cmd: yq e '.node.image_variant // "alpine"' ./${{ inputs.source_path }}/.github/vars/inputs-global.yaml

    # Get pipeline conf
    - name: Get pipeline zip packaging globs
      id: zip_globs_line
      uses: mikefarah/yq@master
      with:
        cmd: yq e '.zipGlobs[]' ./${{ inputs.source_path }}/.github/cloudopsworks-ci.yaml | tr '\n' ' '

    # Get pipeline conf
    - name: Get pipeline zip packaging exclude globs
      id: exclude_globs
      uses: mikefarah/yq@master
      with:
        cmd: yq e '.excludeGlobs[] | "!" + .' ./${{ inputs.source_path }}/.github/cloudopsworks-ci.yaml

    # Get pipeline conf
    - name: Get pipeline zip packaging exclude globs
      id: raw_exclude_globs
      uses: mikefarah/yq@master
      with:
        cmd: yq e '.excludeGlobs[]' ./${{ inputs.source_path }}/.github/cloudopsworks-ci.yaml

    # Get Package Name from package.json
    - name: Get package Name
      id: package_name
      uses: mikefarah/yq@master
      with:
        cmd: yq e -oj -r '.name' ${{ inputs.source_path }}/package.json

    # get from global inputs extra env vars from : node_extra_env entry
    - name: Get Optional Env Vars
      id: node_extra_env_global
      uses: mikefarah/yq@master
      with:
        cmd: yq e -I=0 '.node_extra_env // ""' ./${{ inputs.source_path }}/.github/vars/inputs-global.yaml | tr '\n' ' ' | sed 's/.$//'


    # get from global inputs extra env vars from specific build environment: node_extra_env entry
    - name: Get Optional Env Vars - ${{ inputs.environment }}
      id: node_extra_env
      uses: mikefarah/yq@master
      with:
        cmd: yq e -I=0 '.node_extra_env // "${{ steps.node_extra_env_global.outputs.result }}"' ./${{ inputs.source_path }}/.github/vars/inputs-${{ inputs.environment }}.yaml | tr '\n' ' ' | sed 's/.$//'

    # Get from global inputs if there is custom node install command
    - name: Get Custom Install Command
      id: install_command
      uses: mikefarah/yq@master
      with:
        cmd: yq e -I=0 '.custom_install_command // "npm install --omit=dev"' ./${{ inputs.source_path }}/.github/vars/inputs-global.yaml

    # Get from global inputs if there is custom node build command
    - name: Get Custom Install Command
      id: build_command
      uses: mikefarah/yq@master
      with:
        cmd: yq e -I=0 '.custom_build_command // "npm run build --if-present"' ./${{ inputs.source_path }}/.github/vars/inputs-global.yaml

    # get from global inputs the path where to find the node build result
    - name: Get Node Build Dir
      id: node_build_dir
      uses: mikefarah/yq@master
      with:
        cmd: yq e -I=0 '.node_build_dir // "./build"' ./${{ inputs.source_path }}/.github/vars/inputs-global.yaml

    # get from global inputs the setting if it is frontend target
    - name: Get Front-End Setting
      id: front_end
      uses: mikefarah/yq@master
      with:
        cmd: yq e -I=0 '.frontend and true' ./${{ inputs.source_path }}/.github/vars/inputs-global.yaml

    # Setup Node JS for builds with version provided
    - name: Set Node Version
      uses: actions/setup-node@v4
      with:
        node-version: "${{ steps.node_version.outputs.result }}"
        check-latest: true
        token: ${{ inputs.token }}

    # Cache all NPM packages
    - name: Cache NPM packages
      uses: actions/cache@v4
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json','**/npm-shrinkwrap.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    # Versioning SET
    - name: Version SET
      working-directory: ${{ inputs.source_path }}
      shell: bash
      run: |
        echo "::group::Node Version SET"
        make version
        echo "::endgroup::"

    - name: Version Capture
      id: semver
      working-directory: ${{ inputs.source_path }}
      shell: bash
      run: |
        echo "version=$(cat VERSION)" >> $GITHUB_OUTPUT
    
    # Edit package.json in order to include repository for automatic linking
    - name: Package.JSON - REPO auto link
      uses: mikefarah/yq@master
      with:
        cmd: yq e -oj -i '.repository.type="git"|.repository.url="${{ github.repositoryUrl }}"' ${{ inputs.source_path }}/package.json
    
    # Build the code!
    - name: Install Dependencies
      working-directory: ${{ inputs.source_path }}
      shell: bash
      run: |
        echo "::group::NPM Install"
        ${{ steps.node_extra_env.outputs.result }} ${{ steps.install_command.outputs.result }}
        echo "::endgroup::"

    # Build the code! build target MUST be defined in package.json
    - name: Run NPM Build
      working-directory: ${{ inputs.source_path }}
      shell: bash
      run: |
        echo "::group::NPM Build"
        ${{ steps.node_extra_env.outputs.result }} ${{ steps.build_command.outputs.result }}
        echo "::endgroup::"
