##
# (c) 2021-2025
#     Cloud Ops Works LLC - https://cloudops.works/
#     Find us on:
#       GitHub: https://github.com/cloudopsworks
#       WebSite: https://cloudops.works
#     Distributed Under Apache v2.0 License
#
name: Verify .Net Component
author: cloudopsworks
description: Verify .Net component (depends on build component)
inputs:
  source_path:
    description: 'The path to the source code'
    required: false
    default: 'source'
    deprecationMessage: 'ACTION is DEPRECATED. not in use after workflow v5.6.x'
  blueprint_path:
    description: 'The path to the blueprint'
    required: false
    default: 'bp'
    deprecationMessage: 'ACTION is DEPRECATED. not in use after workflow v5.6.x'
  bot_user:
    description: 'The bot user to use for the build'
    required: true
    deprecationMessage: 'ACTION is DEPRECATED. not in use after workflow v5.6.x'
  token:
    description: 'The github token to use for the build'
    required: true
    deprecationMessage: 'ACTION is DEPRECATED. not in use after workflow v5.6.x'
  dtrack_project_type:
    description: 'The Dependency Track project type'
    required: false
    default: 'library'
    deprecationMessage: 'ACTION is DEPRECATED. not in use after workflow v5.6.x'

runs:
    using: 'composite'
    steps:
      # Get from global inputs the custom Test Options
      - name: Get Test options
        id: test_opts
        uses: mikefarah/yq@master
        with:
          cmd: yq e -I=0 '.test_options // ""' ./${{ inputs.source_path }}/.github/vars/inputs-global.yaml

      # Test the code!
      - name: Test Code
        working-directory: ${{ inputs.source_path }}
        shell: bash
        run: |
          echo "::group::.Net Tests"
          dotnet test ${{ steps.test_opts.outputs.result }} --no-restore --no-build --verbosity normal
          echo "::endgroup::"
        env:
          GITHUB_ACTOR: ${{ inputs.bot_user }}
          GITHUB_TOKEN: ${{ inputs.token }}

      # SBOM generation
      - name: SBOM Generation for Dtrack
        uses: CycloneDX/gh-dotnet-generate-sbom@v1
        with:
          path: ${{ inputs.source_path }}
          output: "${{ inputs.source_path }}/bom.xml"
