##
# (c) 2024 - Cloud Ops Works LLC - https://cloudops.works/
#            On GitHub: https://github.com/cloudopsworks
#            Distributed Under Apache v2.0 License
#
name: Sonarqube Scan .Net
author: cloudopsworks
description: This action scans the .Net code using Sonarqube
inputs:
  source_path:
    description: 'The path to the source code'
    required: false
    default: 'source'
  blueprint_path:
    description: 'The path to the blueprint'
    required: false
    default: 'bp'
  sonarqube_url:
    description: 'The Sonarqube URL'
    required: true
  sonarqube_token:
    description: 'The Sonarqube token'
    required: true
  sonarqube_project_key:
    description: 'The Sonarqube project key'
    required: true
  semver:
    description: 'The Semver version'
    required: true
  token:
    description: 'The Github token'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Get Sonar sources form inputs-global.yaml
      id: source_path
      uses: mikefarah/yq@master
      with:
        cmd: yq e -I=0 '.sonarqube.sources_path // "src/"' ./${{ inputs.source_path }}/.github/vars/inputs-global.yaml

    - name: Get Sonar binaries from inputs-global.yaml
      id: binaries_path
      uses: mikefarah/yq@master
      with:
        cmd: yq e -I=0 '.sonarqube.binaries_path // "target/classes"' ./${{ inputs.source_path }}/.github/vars/inputs-global.yaml

    - name: Get Sonar libraries from inputs-global.yaml
      id: libraries_path
      uses: mikefarah/yq@master
      with:
        cmd: yq e -I=0 '.sonarqube.libraries_path // ""' ./${{ inputs.source_path }}/.github/vars/inputs-global.yaml

    - name: Get Sonar tests from inputs-global.yaml (defaults to source_path)
      id: tests_path
      uses: mikefarah/yq@master
      with:
          cmd: yq e -I=0 '.sonarqube.tests_path // "${{ steps.source_path.outputs.result }}"' ./${{ inputs.source_path }}/.github/vars/inputs-global.yaml

    - name: Get Sonar test binaries from inputs-global.yaml
      id: test_binaries_path
      uses: mikefarah/yq@master
      with:
        cmd: yq e -I=0 '.sonarqube.tests_binaries // "target/test-classes"' ./${{ inputs.source_path }}/.github/vars/inputs-global.yaml

    - name: Get Sonar test inclusions from inputs-global.yaml
      id: test_inclusions_path
      uses: mikefarah/yq@master
      with:
        cmd: yq e -I=0 '.sonarqube.tests_inclusions // "${{ steps.tests_path.outputs.result }}/**/test/**/*"' ./${{ inputs.source_path }}/.github/vars/inputs-global.yaml

    - name: Get Sonar test libraries from inputs-global.yaml
      id: test_libraries_path
      uses: mikefarah/yq@master
      with:
          cmd: yq e -I=0 '.sonarqube.tests_libraries // "${{ steps.libraries_path.outputs.result }}"' ./${{ inputs.source_path }}/.github/vars/inputs-global.yaml

    - name: Get Sonar extra exclusions from inputs-global.yaml
      id: extra_exclusions_paths
      uses: mikefarah/yq@master
      with:
        cmd: yq e -I=0 '.sonarqube.extra_exclusions // ""' ./${{ inputs.source_path }}/.github/vars/inputs-global.yaml

    - name: Get Sonar exclusions from inputs-global.yaml
      id: exclusions_paths
      uses: mikefarah/yq@master
      with:
        cmd: yq e -I=0 '.sonarqube.exclusions // "target/**,${{ steps.tests_path.outputs.result }}/**/test/**/*"' ./${{ inputs.source_path }}/.github/vars/inputs-global.yaml

    - name: Get if sonar branch setting is disabled
      id: branch_disabled
      uses: mikefarah/yq@master
      with:
        cmd: yq e -I=0 '.sonarqube.branch_disabled and true' ./${{ inputs.source_path }}/.github/vars/inputs-global.yaml

    - name: Install .Net Sonar Scanner
      shell: bash
      run: |
        dotnet tool install --global dotnet-sonarscanner
        echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

    - name: Run Sonar Scanner .Net
      shell: bash
      run: |
        dotnet <path to SonarScanner.MSBuild.dll> begin /k:"${{ inputs.sonarqube_project_key }}" /v:"${{ inputs.semver }}" /d:sonar.token="${{ inputs.sonarqube_token }}" /d:sonar.host.url="${{ inputs.sonarqube_url }}" ${{ steps.branch_disabled.outputs.result != 'true' && format('/d:sonar.branch.name="{0}"',github.ref_name) || ' ' }}
        dotnet build <path to project file or .sln file> --no-incremental
        dotnet <path to SonarScanner.MSBuild.dll> end /d:sonar.token="${{ inputs.sonarqube_token }}" 
