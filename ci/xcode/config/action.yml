##
# (c) 2024 - Cloud Ops Works LLC - https://cloudops.works/
#            On GitHub: https://github.com/cloudopsworks
#            Distributed Under Apache v2.0 License
#
name: Get Configuration Values for Xcode Build
author: cloudopsworks
description: Get Configuration Values for Xcode Build
inputs:
  source_path:
    description: 'The path to the source code'
    required: false
    default: 'source'
  environment:
    description: 'The environment to use for the build'
    required: true
outputs:
  xcode_schemes:
    description: 'The XCode schemes to use for the build'
    value: ${{ steps.xcode_schemes.outputs.result }}
  xcode_sdks:
    description: 'The XCode SDKs to use for the build'
    value: ${{ steps.xcode_sdks.outputs.result }}
  xcode_configuration:
    description: 'The XCode configuration to use for the build'
    value: ${{ steps.xcode_configuration.outputs.result }}
  xcode_destinations:
    description: 'The XCode destinations to use for the build'
    value: ${{ steps.xcode_destinations.outputs.result }}
  xcode_dev_team:
    description: 'The XCode development team to use for the build'
    value: ${{ steps.xcode_dev_team.outputs.result }}
  xcode_product_bundle:
    description: 'The XCode product bundle to use for the build'
    value: ${{ steps.xcode_product_bundle.outputs.result }}
  xcode_extra_args:
    description: 'The XCode extra arguments to use for the build'
    value: ${{ steps.xcode_extra_args.outputs.result }}

runs:
  using: 'composite'
  steps:
    - name: Xcode Scheme list with yq
      id: xcode_schemes
      working-directory: ${{ inputs.source_path }}
      shell: bash
      run: |
        OUT=$(yq e -I=0 -o=j '.xcode.schemes' .github/vars/inputs-global.yaml)
        echo "result=$OUT" >> $GITHUB_OUTPUT

    - name: Xcode SDK list with yq
      id: xcode_sdks
      working-directory: ${{ inputs.source_path }}
      shell: bash
      run: |
        OUT=$(yq e -I=0 -o=j '.xcode.sdks' .github/vars/inputs-global.yaml)
        echo "result=$OUT" >> $GITHUB_OUTPUT

    - name: Xcode Configuration for the build
      id: xcode_configuration
      working-directory: ${{ inputs.source_path }}
      shell: bash
      run: |
        OUT=$(yq e '.xcode.configuration' .github/vars/inputs-${{ inputs.environment }}.yaml)
        echo "result=$OUT" >> $GITHUB_OUTPUT

    - name: Get xcode_destinations from inputs-global.yaml with yq
      id: xcode_destinations
      working-directory: ${{ inputs.source_path }}
      shell: bash
      run: |
        OUT=$(yq e -I=0 -o=j '.xcode.destinations' .github/vars/inputs-global.yaml)
        echo "result=$OUT" >> $GITHUB_OUTPUT

    - name: Get xcode_dev_team ID from inputs-global.yaml with yq
      id: xcode_dev_team
      working-directory: ${{ inputs.source_path }}
      shell: bash
      run: |
        OUT=$(yq e '.xcode.dev_team' .github/vars/inputs-global.yaml)
        echo "result=$OUT" >> $GITHUB_OUTPUT

    - name: Get xcode product bundle ID from inputs-global.yaml with yq
      id: xcode_product_bundle
      working-directory: ${{ inputs.source_path }}
      shell: bash
      run: |
        OUT=$(yq e '.xcode.product_bundle' .github/vars/inputs-global.yaml)
        echo "result=$OUT" >> $GITHUB_OUTPUT

    - name: get xcode extra args from inputs-global.yaml with yq
      id: xcode_extra_args
      working-directory: ${{ inputs.source_path }}
      shell: bash
      run: |
        OUT=$(yq e '.xcode.extra_args' .github/vars/inputs-global.yaml)
        echo "result=$OUT" >> $GITHUB_OUTPUT

